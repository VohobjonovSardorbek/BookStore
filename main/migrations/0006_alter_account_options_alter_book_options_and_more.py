# Generated by Django 5.2 on 2025-05-08 05:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0005_alter_wishlist_books'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='account',
            options={'ordering': ['-date_joined'], 'verbose_name': 'Account', 'verbose_name_plural': 'Accounts'},
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'ordering': ['-created_at'], 'verbose_name': 'Book', 'verbose_name_plural': 'Books'},
        ),
        migrations.AlterModelOptions(
            name='image',
            options={'ordering': ['-created_at'], 'verbose_name': 'Image', 'verbose_name_plural': 'Images'},
        ),
        migrations.AlterModelOptions(
            name='wishlist',
            options={'ordering': ['-updated_at'], 'verbose_name': 'Wishlist', 'verbose_name_plural': 'Wishlists'},
        ),
        migrations.RenameField(
            model_name='book',
            old_name='sold',
            new_name='is_deleted',
        ),
        migrations.RemoveField(
            model_name='book',
            name='cover',
        ),
        migrations.AddField(
            model_name='account',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='account',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='book',
            name='status',
            field=models.CharField(choices=[('available', 'Available'), ('sold', 'Sold'), ('reserved', 'Reserved')], db_index=True, default='available', help_text='Current status of the book', max_length=20),
        ),
        migrations.AddField(
            model_name='book',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='image',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='image',
            name='is_cover',
            field=models.BooleanField(default=False, help_text='Whether this is the cover image'),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='wishlist',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='account',
            name='image',
            field=models.ImageField(blank=True, help_text='Profile picture of the user', null=True, upload_to='accounts/'),
        ),
        migrations.AlterField(
            model_name='book',
            name='account',
            field=models.ForeignKey(help_text='Owner of the book', on_delete=django.db.models.deletion.CASCADE, related_name='books', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='book',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='book',
            name='details',
            field=models.TextField(blank=True, help_text='Detailed description of the book', null=True),
        ),
        migrations.AlterField(
            model_name='book',
            name='price',
            field=models.FloatField(help_text='Price of the book', validators=[django.core.validators.MinValueValidator(0.0, message='Price cannot be negative'), django.core.validators.MaxValueValidator(1000000.0, message='Price cannot exceed 1,000,000')]),
        ),
        migrations.AlterField(
            model_name='book',
            name='title',
            field=models.CharField(db_index=True, help_text='Title of the book', max_length=255),
        ),
        migrations.AlterField(
            model_name='image',
            name='book',
            field=models.ForeignKey(help_text='Book this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.book'),
        ),
        migrations.AlterField(
            model_name='image',
            name='image',
            field=models.ImageField(blank=True, help_text='Image of the book', null=True, upload_to='books/'),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='account',
            field=models.OneToOneField(help_text='Account this wishlist belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='books',
            field=models.ManyToManyField(help_text='Books in the wishlist', related_name='wishlists', to='main.book'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title', 'status'], name='main_book_title_4102ad_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['price', 'status'], name='main_book_price_9dfada_idx'),
        ),
    ]
